[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Visit",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Visitor",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Visit",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Visitor",
        "importPath": "account.models",
        "description": "account.models",
        "isExtraImport": true,
        "detail": "account.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "importPath": "core.backend",
        "description": "core.backend",
        "isExtraImport": true,
        "detail": "core.backend",
        "documentation": {}
    },
    {
        "label": "set_cookies",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "set_cookies",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "urlparse",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "user_agents",
        "description": "user_agents",
        "isExtraImport": true,
        "detail": "user_agents",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TruncDay",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "product.models",
        "description": "product.models",
        "isExtraImport": true,
        "detail": "product.models",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "staff_member_required",
        "importPath": "django.contrib.admin.views.decorators",
        "description": "django.contrib.admin.views.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.admin.views.decorators",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "sync_to_async",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "get_channel_layer",
        "importPath": "channels.layers",
        "description": "channels.layers",
        "isExtraImport": true,
        "detail": "channels.layers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "chat.urls",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "chat.urls",
        "description": "chat.urls",
        "detail": "chat.urls",
        "documentation": {}
    },
    {
        "label": "JWTAuthentication",
        "importPath": "rest_framework_simplejwt.authentication",
        "description": "rest_framework_simplejwt.authentication",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.authentication",
        "documentation": {}
    },
    {
        "label": "InvalidToken",
        "importPath": "rest_framework_simplejwt.exceptions",
        "description": "rest_framework_simplejwt.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.exceptions",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "admin_chart_view",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "admin_chat_view",
        "importPath": "account.views",
        "description": "account.views",
        "isExtraImport": true,
        "detail": "account.views",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "Room",
        "importPath": "chat.models",
        "description": "chat.models",
        "isExtraImport": true,
        "detail": "chat.models",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "Post",
        "importPath": "post.models",
        "description": "post.models",
        "isExtraImport": true,
        "detail": "post.models",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "FilterSet",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "BaseInFilter",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "stringify",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "importPath": "flatted",
        "description": "flatted",
        "isExtraImport": true,
        "detail": "flatted",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.account.migrations.0001_initial",
        "description": "backend.account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "backend.account.admin",
        "description": "backend.account.admin",
        "peekOfCode": "class UserAdmin(admin.ModelAdmin):\n    search_fields = ['full_name', 'phone_number', 'email']\n    list_display = ('full_name', 'phone_number', 'email', 'total_orders')  # Add the custom method to the list display\n    list_filter = ['user_type']\n    def total_orders(self, obj):\n        return Order.objects.filter(seller=obj).count()\n    total_orders.short_description = 'Total Orders'\nadmin.site.register(CustomUser, UserAdmin)\nadmin.site.register(Visit)\nadmin.site.register(Visitor)",
        "detail": "backend.account.admin",
        "documentation": {}
    },
    {
        "label": "AccountConfig",
        "kind": 6,
        "importPath": "backend.account.apps",
        "description": "backend.account.apps",
        "peekOfCode": "class AccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'account'",
        "detail": "backend.account.apps",
        "documentation": {}
    },
    {
        "label": "TokenToUserMiddleware",
        "kind": 6,
        "importPath": "backend.account.middleware",
        "description": "backend.account.middleware",
        "peekOfCode": "class TokenToUserMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        if 'admin' in request.path:\n            return self.get_response(request)\n        refresh = False\n        user, refresh = AccessTokenBackend().authenticate(request)\n        try:\n            if request.body:",
        "detail": "backend.account.middleware",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError(\"The Email field must be set\")\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_superuser(self, email, password=None, **extra_fields):",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "class CustomUser(AbstractBaseUser, PermissionsMixin):\n    USER_TYPE_CHOICES = [\n        ('admin', 'Admin'),\n        ('seller', 'seller'),\n        ('client', 'client'),\n    ]\n    email = models.EmailField(unique=True)\n    full_name = models.CharField(max_length=30, blank=True)\n    image = models.FileField(upload_to='users/', null=True, blank=True)\n    user_type = models.CharField(max_length=30, choices=USER_TYPE_CHOICES)",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "Visitor",
        "kind": 6,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "class Visitor(models.Model):\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, blank=True, null=True)\nclass Visit(models.Model):\n    visitor = models.ForeignKey(Visitor, on_delete=models.CASCADE)\n    logged_in = models.BooleanField(default=False)\n    path = models.CharField(max_length=250)\n    created_at = models.DateTimeField(auto_now_add=True)\n    device = models.CharField(max_length=250)\n    os = models.CharField(max_length=250)\n    browser = models.CharField(max_length=250)",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "Visit",
        "kind": 6,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "class Visit(models.Model):\n    visitor = models.ForeignKey(Visitor, on_delete=models.CASCADE)\n    logged_in = models.BooleanField(default=False)\n    path = models.CharField(max_length=250)\n    created_at = models.DateTimeField(auto_now_add=True)\n    device = models.CharField(max_length=250)\n    os = models.CharField(max_length=250)\n    browser = models.CharField(max_length=250)",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.account.models",
        "description": "backend.account.models",
        "peekOfCode": "User = get_user_model()\nclass Visitor(models.Model):\n    user = models.ForeignKey(User, on_delete=models.SET_NULL, blank=True, null=True)\nclass Visit(models.Model):\n    visitor = models.ForeignKey(Visitor, on_delete=models.CASCADE)\n    logged_in = models.BooleanField(default=False)\n    path = models.CharField(max_length=250)\n    created_at = models.DateTimeField(auto_now_add=True)\n    device = models.CharField(max_length=250)\n    os = models.CharField(max_length=250)",
        "detail": "backend.account.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.account.urls",
        "description": "backend.account.urls",
        "peekOfCode": "urlpatterns = [\n    path('settings/', UpdateSettingsView.as_view(), name='update-settings'),\n    path('login/', LoginView.as_view(), name='login'),\n    path('signup/', SignupView.as_view(), name='signup'),\n]",
        "detail": "backend.account.urls",
        "documentation": {}
    },
    {
        "label": "UpdateSettingsView",
        "kind": 6,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "class UpdateSettingsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        user = User.objects.filter(id=request.user.id)\n        if not user.exists():\n            return Response({\"type\": \"error\", \"message\": \"user not fount\"})\n        user = user.get()\n        data = {\n            \"full_name\": user.full_name,",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "kind": 6,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "class LoginView(APIView):\n    @csrf_exempt\n    def post(self, request):\n        email = request.data.get('username')\n        password = request.data.get('password')\n        user = authenticate(username=email, password=password)\n        if user is not None:\n            refresh = RefreshToken.for_user(user)\n            response_data = {\n                \"type\": \"success\",",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "SignupView",
        "kind": 6,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "class SignupView(APIView):\n    @csrf_exempt\n    def post(self, request):\n        full_name = request.data.get('fullName')\n        password = request.data.get('password')\n        password_confermation = request.data.get(\"passwordConfermation\")\n        email = request.data.get('email')\n        phone_number = request.data.get('phoneNumber')\n        if not full_name or not phone_number or not password or not email or not password_confermation:\n            return Response({\"type\": 'error', \"message\": 'Please provide missing fields'})",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "admin_chart_view",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def admin_chart_view(request):\n    visits = Visit.objects.annotate(day=TruncDay('created_at')) \\\n                          .values('day') \\\n                          .annotate(unique_visitors=Count('visitor_id', distinct=True)) \\\n                          .order_by('day')\n    order_data = (\n            Order.objects\n            .values('product__category__name')\n            .annotate(order_count=Count('id'))\n            .order_by('product__category__name')",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "admin_chat_view",
        "kind": 2,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "def admin_chat_view(request):\n    return render(request, 'admin/chat.html', {'rooms': []})",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.account.views",
        "description": "backend.account.views",
        "peekOfCode": "User = get_user_model()\nclass UpdateSettingsView(APIView):\n    permission_classes = [IsAuthenticated]\n    authentication_classes = [AccessTokenBackend]\n    def get(self, request):\n        user = User.objects.filter(id=request.user.id)\n        if not user.exists():\n            return Response({\"type\": \"error\", \"message\": \"user not fount\"})\n        user = user.get()\n        data = {",
        "detail": "backend.account.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.chat.migrations.0001_initial",
        "description": "backend.chat.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Room',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.chat.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "backend.chat.apps",
        "description": "backend.chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'chat'",
        "detail": "backend.chat.apps",
        "documentation": {}
    },
    {
        "label": "ChatConsumer",
        "kind": 6,
        "importPath": "backend.chat.consumers",
        "description": "backend.chat.consumers",
        "peekOfCode": "class ChatConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.room_name = self.scope['url_route']['kwargs']['user_id']\n        self.room_group_name = 'chat_%s' % self.room_name\n        await self.channel_layer.group_add(\n            self.room_group_name,\n            self.channel_name\n        )\n        messages = await sync_to_async(self.list_messages)(self.room_name)\n        await self.channel_layer.group_send(",
        "detail": "backend.chat.consumers",
        "documentation": {}
    },
    {
        "label": "RoomConsumer",
        "kind": 6,
        "importPath": "backend.chat.consumers",
        "description": "backend.chat.consumers",
        "peekOfCode": "class RoomConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.room_group_name = 'rooms'\n        await self.channel_layer.group_add(\n            self.room_group_name,\n            self.channel_name\n        )\n        rooms = await sync_to_async(self.list_rooms)()\n        await self.channel_layer.group_send(\n            self.room_group_name,",
        "detail": "backend.chat.consumers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.chat.consumers",
        "description": "backend.chat.consumers",
        "peekOfCode": "User = get_user_model() \nclass ChatConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.room_name = self.scope['url_route']['kwargs']['user_id']\n        self.room_group_name = 'chat_%s' % self.room_name\n        await self.channel_layer.group_add(\n            self.room_group_name,\n            self.channel_name\n        )\n        messages = await sync_to_async(self.list_messages)(self.room_name)",
        "detail": "backend.chat.consumers",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "class Room(models.Model):\n    STATUS_CHOICES = [\n        ('New Message', 'New Message'),\n        ('Order Created', 'Order Created'),\n        ('In progress', 'In progress'),\n    ]\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='user_2', null=True)\n    status = models.CharField(max_length=200, choices=STATUS_CHOICES)\nclass Message(models.Model):\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "class Message(models.Model):\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)\n    message = models.TextField()\n    reciever = models.ForeignKey(User, on_delete=models.SET_NULL, related_name='reciever', null=True)\n    sender = models.ForeignKey(User, on_delete=models.SET_NULL, related_name='sender', null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    seen = models.BooleanField(default=False)\n@receiver(pre_save, sender=Room)\ndef detect_updated_fields(sender, instance, **kwargs):\n    if instance.pk:  # Ensure this is not a new instance",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "detect_updated_fields",
        "kind": 2,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "def detect_updated_fields(sender, instance, **kwargs):\n    if instance.pk:  # Ensure this is not a new instance\n        # Fetch the original instance from the database\n        original = Room.objects.get(pk=instance.pk)\n        original_value = getattr(original, 'status')\n        new_value = getattr(instance, 'status')\n        if original_value != new_value:\n            channel_layer = get_channel_layer()\n            # Extract data from kwargs\n            # Send the message to the group",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.chat.models",
        "description": "backend.chat.models",
        "peekOfCode": "User = get_user_model()\nclass Room(models.Model):\n    STATUS_CHOICES = [\n        ('New Message', 'New Message'),\n        ('Order Created', 'Order Created'),\n        ('In progress', 'In progress'),\n    ]\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='user_2', null=True)\n    status = models.CharField(max_length=200, choices=STATUS_CHOICES)\nclass Message(models.Model):",
        "detail": "backend.chat.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.chat.urls",
        "description": "backend.chat.urls",
        "peekOfCode": "urlpatterns = [\n]\nfrom .consumers import ChatConsumer, RoomConsumer\nwebsocket_urlpatterns = [\n    re_path(r'ws/chat/(?P<user_id>\\w+)/$', ChatConsumer.as_asgi()),\n    path('ws/rooms/', RoomConsumer.as_asgi()),\n]",
        "detail": "backend.chat.urls",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "backend.chat.urls",
        "description": "backend.chat.urls",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r'ws/chat/(?P<user_id>\\w+)/$', ChatConsumer.as_asgi()),\n    path('ws/rooms/', RoomConsumer.as_asgi()),\n]",
        "detail": "backend.chat.urls",
        "documentation": {}
    },
    {
        "label": "django_asgi_app",
        "kind": 5,
        "importPath": "backend.core.asgi",
        "description": "backend.core.asgi",
        "peekOfCode": "django_asgi_app = get_asgi_application()\nimport chat.urls\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\napplication = ProtocolTypeRouter({\n    \"http\": django_asgi_app,\n    \"websocket\": AuthMiddlewareStack(\n            URLRouter(\n                chat.urls.websocket_urlpatterns\n            )\n    ),",
        "detail": "backend.core.asgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.core.asgi",
        "description": "backend.core.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\n    \"http\": django_asgi_app,\n    \"websocket\": AuthMiddlewareStack(\n            URLRouter(\n                chat.urls.websocket_urlpatterns\n            )\n    ),\n})",
        "detail": "backend.core.asgi",
        "documentation": {}
    },
    {
        "label": "AccessTokenBackend",
        "kind": 6,
        "importPath": "backend.core.backend",
        "description": "backend.core.backend",
        "peekOfCode": "class AccessTokenBackend(JWTAuthentication):\n    def authenticate(self, request):\n        token = request.COOKIES.get('pg_access','')\n        timestamp = request.COOKIES.get('pg_exp','')\n        refresh = request.COOKIES.get('pg_refresh','')\n        try:\n            exp = datetime.fromtimestamp(int(timestamp))\n            if not refresh or not token:\n                return (None, None)\n            if exp > datetime.now() and token:",
        "detail": "backend.core.backend",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.core.backend",
        "description": "backend.core.backend",
        "peekOfCode": "User = get_user_model()\nclass AccessTokenBackend(JWTAuthentication):\n    def authenticate(self, request):\n        token = request.COOKIES.get('pg_access','')\n        timestamp = request.COOKIES.get('pg_exp','')\n        refresh = request.COOKIES.get('pg_refresh','')\n        try:\n            exp = datetime.fromtimestamp(int(timestamp))\n            if not refresh or not token:\n                return (None, None)",
        "detail": "backend.core.backend",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ['SECRET_KEY']\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = bool(os.environ['DEBUG'])\nALLOWED_HOSTS = ['*']\n# Application definition\nREST_FRAMEWORK = {",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "SECRET_KEY = os.environ['SECRET_KEY']\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = bool(os.environ['DEBUG'])\nALLOWED_HOSTS = ['*']\n# Application definition\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer',\n    ],\n}",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DEBUG = bool(os.environ['DEBUG'])\nALLOWED_HOSTS = ['*']\n# Application definition\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer',\n    ],\n}\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\n# Application definition\nREST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer',\n    ],\n}\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_RENDERER_CLASSES': [\n        'rest_framework.renderers.JSONRenderer',\n    ],\n}\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'channels_redis',\n    'channels',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'account.middleware.TokenToUserMiddleware',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "STORAGES",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "STORAGES = {\n    \"default\": {\n        \"BACKEND\": \"storages.backends.s3.S3Storage\",\n    },\n     \"staticfiles\": {\n        \"BACKEND\": \"storages.backends.s3boto3.S3Boto3Storage\",\n    },\n}\nDEFAULT_FILE_STORAGE = os.environ['DEFAULT_FILE_STORAGE']\nAWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = os.environ['DEFAULT_FILE_STORAGE']\nAWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']\nAWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']\nAWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']\nAWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = os.environ['AWS_ACCESS_KEY_ID']\nAWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']\nAWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']\nAWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_SECRET_ACCESS_KEY = os.environ['AWS_SECRET_ACCESS_KEY']\nAWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']\nAWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_STORAGE_BUCKET_NAME = os.environ['AWS_STORAGE_BUCKET_NAME']\nAWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_REGION_NAME",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_S3_REGION_NAME = os.environ['AWS_S3_REGION_NAME']\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_QUERYSTRING_AUTH",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_QUERYSTRING_AUTH = False\nAWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_CUSTOM_DOMAIN",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_S3_CUSTOM_DOMAIN = f\"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com\"\nSTATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "STATIC_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/static/\"\nMEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "MEDIA_URL = f\"https://{AWS_S3_CUSTOM_DOMAIN}/\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates',],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nAWS_DEFAULT_ACL = 'public-read'\nWSGI_APPLICATION = 'core.wsgi.application'\nASGI_APPLICATION = 'core.asgi.application'\n# Set up channel layers with Redis\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [os.environ['REDIS_URL']],",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AWS_DEFAULT_ACL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AWS_DEFAULT_ACL = 'public-read'\nWSGI_APPLICATION = 'core.wsgi.application'\nASGI_APPLICATION = 'core.asgi.application'\n# Set up channel layers with Redis\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [os.environ['REDIS_URL']],\n        },",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\nASGI_APPLICATION = 'core.asgi.application'\n# Set up channel layers with Redis\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [os.environ['REDIS_URL']],\n        },\n    },",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "ASGI_APPLICATION = 'core.asgi.application'\n# Set up channel layers with Redis\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [os.environ['REDIS_URL']],\n        },\n    },\n    'ROUTING': 'ws.routing.application',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [os.environ['REDIS_URL']],\n        },\n    },\n    'ROUTING': 'ws.routing.application',\n}\n# Database",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.environ['DBPGDATA'],\n        'USER': os.environ['DBUSER'],\n        'PASSWORD': os.environ['DBPASSWORD'],\n        'HOST': os.environ['DBHOST'],\n        'PORT': os.environ['DBPORT'],\n    }\n}",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'account.CustomUser'\n# Internationalization\n# https://docs.djangoproject.com/en/4.2/topics/i18n/\nSIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': SECRET_KEY,",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=20),\n    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),\n    'ROTATE_REFRESH_TOKENS': False,\n    'BLACKLIST_AFTER_ROTATION': True,\n    'ALGORITHM': 'HS256',\n    'SIGNING_KEY': SECRET_KEY,\n    'AUTH_HEADER_TYPES': ('Bearer',),\n}\nLANGUAGE_CODE = 'en-us'",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'\n]",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "USE_TZ = True\nCORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'\n]\nCSRF_TRUSTED_ORIGINS = [",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'\n]\nCSRF_TRUSTED_ORIGINS = [\n    'http://planetgamesshop.vercel.app',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    'http://localhost:3000',\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'\n]\nCSRF_TRUSTED_ORIGINS = [\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\n    'http://planetgamesshop.vercel.app',\n    'https://planetgamesshop.vercel.app',\n    'https://dashboard-web-copy-production.up.railway.app',\n    'https://django-server-production-281d.up.railway.app'\n]\nCORS_ALLOWED_METHODS = [\n    'GET', 'POST', 'DELETE', 'PUT'\n]\nCORS_ALLOW_CREDENTIALS = True",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_METHODS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CORS_ALLOWED_METHODS = [\n    'GET', 'POST', 'DELETE', 'PUT'\n]\nCORS_ALLOW_CREDENTIALS = True\nREST_FRAMEWORK = {\n    'DATETIME_FORMAT': \"%Y-%m-%d\", \n}\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n# Default primary key field type",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nREST_FRAMEWORK = {\n    'DATETIME_FORMAT': \"%Y-%m-%d\", \n}\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DATETIME_FORMAT': \"%Y-%m-%d\", \n}\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "backend.core.settings",
        "description": "backend.core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "backend.core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.core.urls",
        "description": "backend.core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/charts/', admin_chart_view, name='admin-chart'),\n    path('admin/chat/', admin_chat_view, name='live-chat'),\n    path('admin/', admin.site.urls),\n    path('api/user/', include('account.urls')),\n    path('api/post/', include('post.urls')),\n    path('api/order/', include('order.urls')),\n    path('api/chat/', include('chat.urls')),\n    path('api/product/', include('product.urls')),\n]",
        "detail": "backend.core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "backend.core.wsgi",
        "description": "backend.core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "backend.core.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.env.bin.jp",
        "description": "backend.env.bin.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "backend.env.bin.jp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.order.migrations.0001_initial",
        "description": "backend.order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('product', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',\n            fields=[",
        "detail": "backend.order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "backend.order.admin",
        "description": "backend.order.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    search_fields = [\n        'client__full_name', \n        'seller__full_name', \n        'seller__phone_number', \n        'client__phone_number', \n        'price', \n        'category__name'\n    ]\n    list_display = ['id', 'client__full_name', 'seller__full_name', 'price', 'product__name']",
        "detail": "backend.order.admin",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "backend.order.apps",
        "description": "backend.order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'order'",
        "detail": "backend.order.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "backend.order.models",
        "description": "backend.order.models",
        "peekOfCode": "class Order(models.Model):\n    price = models.FloatField()\n    client = models.ForeignKey(User, on_delete=models.CASCADE, limit_choices_to={'user_type':'client'}, related_name='client')\n    product = models.ForeignKey(\"product.Product\", on_delete=models.CASCADE)\n    seller = models.ForeignKey(User, on_delete=models.CASCADE, limit_choices_to={'user_type': 'seller'}, related_name='seller', blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n@receiver(post_save, sender=Order)\ndef detect_updated_fields(sender, instance, created,**kwargs):\n    if created:  # Ensure this is not a new instance\n        # Fetch the original instance from the database",
        "detail": "backend.order.models",
        "documentation": {}
    },
    {
        "label": "detect_updated_fields",
        "kind": 2,
        "importPath": "backend.order.models",
        "description": "backend.order.models",
        "peekOfCode": "def detect_updated_fields(sender, instance, created,**kwargs):\n    if created:  # Ensure this is not a new instance\n        # Fetch the original instance from the database\n        room = Room.objects.filter(user_id=instance.client.id)\n        if room.exists():\n            room = room.get()\n            room.status = 'Order Created'\n            room.save()",
        "detail": "backend.order.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.order.models",
        "description": "backend.order.models",
        "peekOfCode": "User = get_user_model()\nclass Order(models.Model):\n    price = models.FloatField()\n    client = models.ForeignKey(User, on_delete=models.CASCADE, limit_choices_to={'user_type':'client'}, related_name='client')\n    product = models.ForeignKey(\"product.Product\", on_delete=models.CASCADE)\n    seller = models.ForeignKey(User, on_delete=models.CASCADE, limit_choices_to={'user_type': 'seller'}, related_name='seller', blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n@receiver(post_save, sender=Order)\ndef detect_updated_fields(sender, instance, created,**kwargs):\n    if created:  # Ensure this is not a new instance",
        "detail": "backend.order.models",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "backend.order.serializers",
        "description": "backend.order.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    product = serializers.SerializerMethodField()\n    category = serializers.SerializerMethodField()\n    def get_product(self, obj):\n        return obj.product.name\n    def get_category(self, obj):\n        return obj.product.category.name\n    class Meta:\n        model = Order\n        fields = ['id', 'price', 'product', 'category']",
        "detail": "backend.order.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.order.urls",
        "description": "backend.order.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', OrderListView.as_view(), name='orders-list'),\n]",
        "detail": "backend.order.urls",
        "documentation": {}
    },
    {
        "label": "OrderPagination",
        "kind": 6,
        "importPath": "backend.order.views",
        "description": "backend.order.views",
        "peekOfCode": "class OrderPagination(PageNumberPagination):\n    page_size = 10  # Number of orders per page\n    page_size_query_param = 'page_size'  # Allow clients to specify a custom page size\n    max_page_size = 100  # Maximum number of orders per page\nclass OrderListView(generics.ListAPIView):\n    serializer_class = OrderSerializer\n    permission_classes = [IsAuthenticated]\n    pagination_class = OrderPagination  # Set the pagination class\n    def get_queryset(self):\n        user = self.request.user",
        "detail": "backend.order.views",
        "documentation": {}
    },
    {
        "label": "OrderListView",
        "kind": 6,
        "importPath": "backend.order.views",
        "description": "backend.order.views",
        "peekOfCode": "class OrderListView(generics.ListAPIView):\n    serializer_class = OrderSerializer\n    permission_classes = [IsAuthenticated]\n    pagination_class = OrderPagination  # Set the pagination class\n    def get_queryset(self):\n        user = self.request.user\n        return Order.objects.filter(client=user)",
        "detail": "backend.order.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.post.migrations.0001_initial",
        "description": "backend.post.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Post',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('media', models.FileField(upload_to='posts/')),",
        "detail": "backend.post.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "PostConfig",
        "kind": 6,
        "importPath": "backend.post.apps",
        "description": "backend.post.apps",
        "peekOfCode": "class PostConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'post'",
        "detail": "backend.post.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "backend.post.models",
        "description": "backend.post.models",
        "peekOfCode": "class Post(models.Model):\n    MEDIA_TYPES = [\n        ('vidoe','vidoe'),\n        ('image','image'),\n    ]\n    media = models.FileField(upload_to='posts/')\n    description = models.TextField()\n    created_at = models.DateTimeField()\n    media_type = models.CharField(max_length=300, choices=MEDIA_TYPES)",
        "detail": "backend.post.models",
        "documentation": {}
    },
    {
        "label": "PostSerializer",
        "kind": 6,
        "importPath": "backend.post.serializers",
        "description": "backend.post.serializers",
        "peekOfCode": "class PostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Post\n        fields = ['id', 'media', 'description', 'created_at', 'media_type']",
        "detail": "backend.post.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.post.urls",
        "description": "backend.post.urls",
        "peekOfCode": "urlpatterns = [\n    path('posts/', PostListView.as_view(), name='post-list'),\n]",
        "detail": "backend.post.urls",
        "documentation": {}
    },
    {
        "label": "PostPagination",
        "kind": 6,
        "importPath": "backend.post.views",
        "description": "backend.post.views",
        "peekOfCode": "class PostPagination(PageNumberPagination):\n    page_size = 10  # Number of posts per page\n    page_size_query_param = 'page_size'  # Allow clients to specify a custom page size\n    max_page_size = 100  # Maximum number of posts per page\nclass PostListView(generics.ListAPIView):\n    queryset = Post.objects.all()\n    serializer_class = PostSerializer\n    pagination_class = PostPagination  # Set the pagination class",
        "detail": "backend.post.views",
        "documentation": {}
    },
    {
        "label": "PostListView",
        "kind": 6,
        "importPath": "backend.post.views",
        "description": "backend.post.views",
        "peekOfCode": "class PostListView(generics.ListAPIView):\n    queryset = Post.objects.all()\n    serializer_class = PostSerializer\n    pagination_class = PostPagination  # Set the pagination class",
        "detail": "backend.post.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "backend.product.migrations.0001_initial",
        "description": "backend.product.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "backend.product.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ProductConfig",
        "kind": 6,
        "importPath": "backend.product.apps",
        "description": "backend.product.apps",
        "peekOfCode": "class ProductConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'product'",
        "detail": "backend.product.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "backend.product.models",
        "description": "backend.product.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=300)\nclass Product(models.Model):\n    image = models.FileField(upload_to=\"products/\")\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    media_type = models.CharField(max_length=300)\n    price = models.FloatField()",
        "detail": "backend.product.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "backend.product.models",
        "description": "backend.product.models",
        "peekOfCode": "class Product(models.Model):\n    image = models.FileField(upload_to=\"products/\")\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    media_type = models.CharField(max_length=300)\n    price = models.FloatField()\nclass Review(models.Model):\n    STARS_CHOICES = [",
        "detail": "backend.product.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "backend.product.models",
        "description": "backend.product.models",
        "peekOfCode": "class Review(models.Model):\n    STARS_CHOICES = [\n        (1,1),\n        (2,2),\n        (3,3),\n        (4,4),\n        (5,5),\n    ]\n    review = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "backend.product.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "backend.product.models",
        "description": "backend.product.models",
        "peekOfCode": "User = get_user_model()\nclass Category(models.Model):\n    name = models.CharField(max_length=300)\nclass Product(models.Model):\n    image = models.FileField(upload_to=\"products/\")\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    name = models.CharField(max_length=200)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    media_type = models.CharField(max_length=300)",
        "detail": "backend.product.models",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "backend.product.serializers",
        "description": "backend.product.serializers",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    review_count = serializers.SerializerMethodField()\n    def get_review_count(self, obj):\n        return Review.objects.filter(product=obj).count()\n    class Meta:\n        model = Product\n        fields = ['id', 'image', 'category', 'description', 'created_at', 'media_type', 'price', 'name', 'review_count']\nclass ReviewSerializer(serializers.ModelSerializer):\n    client_name = serializers.SerializerMethodField()\n    class Meta:",
        "detail": "backend.product.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "backend.product.serializers",
        "description": "backend.product.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    client_name = serializers.SerializerMethodField()\n    class Meta:\n        model = Review\n        fields = ['id', 'review', 'stars', 'client_name', 'created_at']\n    def get_client_name(self, obj):\n        return obj.client.full_name\nclass CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category",
        "detail": "backend.product.serializers",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "backend.product.serializers",
        "description": "backend.product.serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ['id', 'name']",
        "detail": "backend.product.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "backend.product.urls",
        "description": "backend.product.urls",
        "peekOfCode": "urlpatterns = [\n    path('categories/', CategoryListView.as_view(), name='category-list'),\n    path('', ProductListView.as_view(), name='product-list'),\n    re_path(r'^(?:(?P<product_id>\\d+)/)?reviews/$', ReviewListView.as_view(), name='product-review-list'),\n]",
        "detail": "backend.product.urls",
        "documentation": {}
    },
    {
        "label": "Pagination",
        "kind": 6,
        "importPath": "backend.product.views",
        "description": "backend.product.views",
        "peekOfCode": "class Pagination(PageNumberPagination):\n    page_size = 10  # Default number of products per page\n    page_size_query_param = 'page_size'  # Allow clients to modify the page size\n    max_page_size = 100  # Maximum limit for page size\nclass ProductFilter(FilterSet):\n    category_id = BaseInFilter(field_name='category_id', lookup_expr='in')\n    class Meta:\n        model = Product\n        fields = ['category_id']\nclass ProductListView(generics.ListAPIView):",
        "detail": "backend.product.views",
        "documentation": {}
    },
    {
        "label": "ProductFilter",
        "kind": 6,
        "importPath": "backend.product.views",
        "description": "backend.product.views",
        "peekOfCode": "class ProductFilter(FilterSet):\n    category_id = BaseInFilter(field_name='category_id', lookup_expr='in')\n    class Meta:\n        model = Product\n        fields = ['category_id']\nclass ProductListView(generics.ListAPIView):\n    queryset = Product.objects.all().order_by('-id')\n    serializer_class = ProductSerializer\n    pagination_class = Pagination\n    filter_backends = [DjangoFilterBackend, filters.OrderingFilter]",
        "detail": "backend.product.views",
        "documentation": {}
    },
    {
        "label": "ProductListView",
        "kind": 6,
        "importPath": "backend.product.views",
        "description": "backend.product.views",
        "peekOfCode": "class ProductListView(generics.ListAPIView):\n    queryset = Product.objects.all().order_by('-id')\n    serializer_class = ProductSerializer\n    pagination_class = Pagination\n    filter_backends = [DjangoFilterBackend, filters.OrderingFilter]\n    filterset_class = ProductFilter\n    ordering_fields = ['price', 'created_at']\nclass CategoryListView(generics.ListAPIView):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer",
        "detail": "backend.product.views",
        "documentation": {}
    },
    {
        "label": "CategoryListView",
        "kind": 6,
        "importPath": "backend.product.views",
        "description": "backend.product.views",
        "peekOfCode": "class CategoryListView(generics.ListAPIView):\n    queryset = Category.objects.all()\n    serializer_class = CategorySerializer\nclass ReviewListView(generics.ListAPIView):\n    queryset = Review.objects.all().order_by('-id')\n    serializer_class = ReviewSerializer\n    pagination_class = Pagination\n    def get_queryset(self):\n        product_id = self.kwargs.get('product_id')\n        if product_id:",
        "detail": "backend.product.views",
        "documentation": {}
    },
    {
        "label": "ReviewListView",
        "kind": 6,
        "importPath": "backend.product.views",
        "description": "backend.product.views",
        "peekOfCode": "class ReviewListView(generics.ListAPIView):\n    queryset = Review.objects.all().order_by('-id')\n    serializer_class = ReviewSerializer\n    pagination_class = Pagination\n    def get_queryset(self):\n        product_id = self.kwargs.get('product_id')\n        if product_id:\n            product = get_object_or_404(Product, id=product_id)\n            return Review.objects.filter(product=product)\n        else:",
        "detail": "backend.product.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "backend.manage",
        "description": "backend.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "backend.manage",
        "documentation": {}
    },
    {
        "label": "set_cookies",
        "kind": 2,
        "importPath": "backend.utils",
        "description": "backend.utils",
        "peekOfCode": "def set_cookies(refresh, response, max_age=None):\n    response.set_cookie(\n                'pg_access',\n                str(refresh.access_token),\n                max_age=refresh.payload['exp'],\n                httponly=True,\n                secure=True,\n                samesite='None'\n            )\n    response.set_cookie(",
        "detail": "backend.utils",
        "documentation": {}
    },
    {
        "label": "_Known",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _Known:\n    def __init__(self):\n        self.key = []\n        self.value = []\nclass _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "_String",
        "kind": 6,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "class _String:\n    def __init__(self, value):\n        self.value = value\ndef _array_keys(value):\n    keys = []\n    i = 0\n    for _ in value:\n        keys.append(i)\n        i += 1\n    return keys",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "parse",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def parse(value, *args, **kwargs):\n    json = _json.loads(value, *args, **kwargs)\n    wrapped = []\n    for value in json:\n        wrapped.append(_wrap(value))\n    input = []\n    for value in wrapped:\n        if isinstance(value, _String):\n            input.append(value.value)\n        else:",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.flatted",
        "description": "frontend.node_modules.flatted.python.flatted",
        "peekOfCode": "def stringify(value, *args, **kwargs):\n    known = _Known()\n    input = []\n    output = []\n    i = int(_index(known, input, value))\n    while i < len(input):\n        output.append(_transform(known, input, input[i]))\n        i += 1\n    return _json.dumps(output, *args, **kwargs)",
        "detail": "frontend.node_modules.flatted.python.flatted",
        "documentation": {}
    },
    {
        "label": "stringify",
        "kind": 2,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "def stringify(value):\n    return _stringify(value, separators=(',', ':'))\nassert stringify([None, None]) == '[[null,null]]'\na = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a = []\no = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o = {}\nassert stringify(a) == '[[]]'\nassert stringify(o) == '[{}]'\na.append(a)\no['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['o']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['o'] = o\nassert stringify(a) == '[[\"0\"]]'\nassert stringify(o) == '[{\"o\":\"0\"}]'\nb = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "b",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "b = parse(stringify(a))\nassert isinstance(b, list) and b[0] == b\na.append(1)\na.append('two')\na.append(True)\no['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['one']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['one'] = 1\no['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['two']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['two'] = 'two'\no['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['three']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['three'] = True\nassert stringify(a) == '[[\"0\",1,\"1\",true],\"two\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true},\"two\"]'\na.append(o)\no['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['a']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['a'] = a\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\"}]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\"},\"two\",[\"2\",1,\"1\",true,\"0\"]]'\na.append({'test': 'OK'})\na.append([1, 2, 3])\no['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['test']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['test'] = {'test': 'OK'}\no['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o['array']",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o['array'] = [1, 2, 3]\nassert stringify(a) == '[[\"0\",1,\"1\",true,\"2\",\"3\",\"4\"],\"two\",{\"o\":\"2\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"0\",\"test\":\"3\",\"array\":\"4\"},{\"test\":\"5\"},[1,2,3],\"OK\"]'\nassert stringify(o) == '[{\"o\":\"0\",\"one\":1,\"two\":\"1\",\"three\":true,\"a\":\"2\",\"test\":\"3\",\"array\":\"4\"},\"two\",[\"2\",1,\"1\",true,\"0\",\"3\",\"4\"],{\"test\":\"5\"},[1,2,3],\"OK\"]'\na2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "a2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "a2 = parse(stringify(a));\no2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "o2",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "o2 = parse(stringify(o));\nassert a2[0] == a2\nassert o2['o'] == o2\nassert a2[1] == 1 and a2[2] == 'two' and a2[3] == True and isinstance(a2[4], dict)\nassert a2[4] == a2[4]['o'] and a2 == a2[4]['o']['a']\nstr = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "str",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "str = parse('[{\"prop\":\"1\",\"a\":\"2\",\"b\":\"3\"},{\"value\":123},[\"4\",\"5\"],{\"e\":\"6\",\"t\":\"7\",\"p\":4},{},{\"b\":\"8\"},\"f\",{\"a\":\"9\"},[\"10\"],\"sup\",{\"a\":1,\"d\":2,\"c\":\"7\",\"z\":\"11\",\"h\":1},{\"g\":2,\"a\":\"7\",\"b\":\"12\",\"f\":6},{\"r\":4,\"u\":\"7\",\"c\":5}]')\nassert str['b']['t']['a'] == 'sup' and str['a'][1]['b'][0]['c'] == str['b']['t']\noo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    },
    {
        "label": "oo",
        "kind": 5,
        "importPath": "frontend.node_modules.flatted.python.test",
        "description": "frontend.node_modules.flatted.python.test",
        "peekOfCode": "oo = parse('[{\"a\":\"1\",\"b\":\"0\",\"c\":\"2\"},{\"aa\":\"3\"},{\"ca\":\"4\",\"cb\":\"5\",\"cc\":\"6\",\"cd\":\"7\",\"ce\":\"8\",\"cf\":\"9\"},{\"aaa\":\"10\"},{\"caa\":\"4\"},{\"cba\":\"5\"},{\"cca\":\"2\"},{\"cda\":\"4\"},\"value2\",\"value3\",\"value1\"]');\nassert oo['a']['aa']['aaa'] == 'value1' and oo == oo['b'] and oo['c']['ca']['caa'] == oo['c']['ca']\nprint('OK')",
        "detail": "frontend.node_modules.flatted.python.test",
        "documentation": {}
    }
]